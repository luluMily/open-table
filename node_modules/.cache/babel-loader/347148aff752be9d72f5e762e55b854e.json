{"ast":null,"code":"var _jsxFileName = \"/Users/luluMily/project/open-table/src/components/RestaurantContainer.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { searchRestaurants } from '../actions/index';\nimport { bindActionCreators } from 'redux';\nimport RestaurantItem from './RestaurantItem';\nimport SearchBar from './SearchBar';\nimport FilterBar from './FilterBar';\n\nclass RestaurantContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onFilterFormSubmit = filter => {\n      this.setState({\n        fitler: filter\n      });\n\n      if (!filter) {\n        this.onFormSubmit(this.state.city);\n      }\n\n      let filterString = filter.toLowerCase();\n      const restaurantsFilterList = this.props.restaurants.filter(restaurant => {\n        return restaurant.name.toLowerCase().includes(filterString) || restaurant.address.toLowerCase().includes(filterString) || restaurant.area.toLowerCase().includes(filterString);\n      });\n      this.setState({\n        restaurants: restaurantsFilterList\n      });\n    };\n\n    this.state = {\n      city: '',\n      fitler: ''\n    };\n  } // onFormSubmit = async city => { \n  //     if (!city) {\n  //         alert('Please enter a city');\n  //         return;\n  //     }\n  //     this.setState({city: city});\n  //     await fetch(`https://opentable.herokuapp.com/api/restaurants?city=${city}`)\n  //     .then(res => res.json())\n  //     .then(\n  //         (result) => {\n  //             this.setState({ restaurants: result.restaurants });\n  //             if(this.state.fitler) {\n  //                 this.onFilterFormSubmit(this.state.fitler);\n  //             }\n  //         }\n  //     )\n  // }\n\n\n  render() {\n    const restaurantsList = [];\n    this.props.restaurants.forEach(restaurant => {\n      restaurantsList.push(React.createElement(RestaurantItem, {\n        key: restaurant.id,\n        restaurant: restaurant,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(\"div\", {\n      className: \"restaurant-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(FilterBar, {\n      onFilterFormSubmit: this.onFilterFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"total\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Total \", this.props.restaurants.length, \" are restaurants available.\")), React.createElement(\"ul\", {\n      className: \"list-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, restaurantsList));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    restaurants: state.restaurants || []\n  };\n} // function mapDispatchToProps(dispatch) {\n//     return bindActionCreators({ searchRestaurants: searchRestaurants }, dispatch);\n// }\n\n\nexport default connect(mapStateToProps)(RestaurantContainer);","map":{"version":3,"sources":["/Users/luluMily/project/open-table/src/components/RestaurantContainer.js"],"names":["React","connect","searchRestaurants","bindActionCreators","RestaurantItem","SearchBar","FilterBar","RestaurantContainer","Component","constructor","props","onFilterFormSubmit","filter","setState","fitler","onFormSubmit","state","city","filterString","toLowerCase","restaurantsFilterList","restaurants","restaurant","name","includes","address","area","render","restaurantsList","forEach","push","id","length","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,mBAAN,SAAkCP,KAAK,CAACQ,SAAxC,CAAkD;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA6BnBC,kBA7BmB,GA6BEC,MAAM,IAAI;AAC3B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAEF;AAAV,OAAd;;AAEA,UAAG,CAACA,MAAJ,EAAY;AACR,aAAKG,YAAL,CAAkB,KAAKC,KAAL,CAAWC,IAA7B;AACH;;AAED,UAAIC,YAAY,GAAGN,MAAM,CAACO,WAAP,EAAnB;AAEA,YAAMC,qBAAqB,GAAG,KAAKV,KAAL,CAAWW,WAAX,CAAuBT,MAAvB,CAA+BU,UAAU,IAAI;AACvE,eAAOA,UAAU,CAACC,IAAX,CAAgBJ,WAAhB,GAA8BK,QAA9B,CAAuCN,YAAvC,KACJI,UAAU,CAACG,OAAX,CAAmBN,WAAnB,GAAiCK,QAAjC,CAA0CN,YAA1C,CADI,IAEJI,UAAU,CAACI,IAAX,CAAgBP,WAAhB,GAA8BK,QAA9B,CAAuCN,YAAvC,CAFH;AAGH,OAJ6B,CAA9B;AAMA,WAAKL,QAAL,CAAc;AACVQ,QAAAA,WAAW,EAAED;AADH,OAAd;AAGH,KA/CkB;;AAEf,SAAKJ,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETH,MAAAA,MAAM,EAAE;AAFC,KAAb;AAIH,GAP6C,CAS9C;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAsBAa,EAAAA,MAAM,GAAG;AACL,UAAMC,eAAe,GAAG,EAAxB;AACA,SAAKlB,KAAL,CAAWW,WAAX,CAAuBQ,OAAvB,CAA+BP,UAAU,IAAI;AACzCM,MAAAA,eAAe,CAACE,IAAhB,CACI,oBAAC,cAAD;AAAgB,QAAA,GAAG,EAAER,UAAU,CAACS,EAAhC;AAAoC,QAAA,UAAU,EAAET,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KAJD;AAMA,WACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,SAAD;AACI,MAAA,kBAAkB,EAAE,KAAKX,kBAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAII;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA+B,KAAKD,KAAL,CAAWW,WAAX,CAAuBW,MAAtD,gCAJJ,CADJ,EAOI;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCJ,eAAhC,CAPJ,CADJ;AAWH;;AArE6C;;AAwElD,SAASK,eAAT,CAAyBjB,KAAzB,EAAgC;AAC5B,SAAO;AACHK,IAAAA,WAAW,EAAEL,KAAK,CAACK,WAAN,IAAqB;AAD/B,GAAP;AAGH,C,CAED;AACA;AACA;;;AAEA,eAAepB,OAAO,CAACgC,eAAD,CAAP,CAAyB1B,mBAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { searchRestaurants } from '../actions/index';\nimport { bindActionCreators } from 'redux';\nimport RestaurantItem from './RestaurantItem';\nimport SearchBar from './SearchBar';\nimport FilterBar from './FilterBar';\n\nclass RestaurantContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            city: '',\n            fitler: ''\n        }\n    }\n    \n    // onFormSubmit = async city => { \n    //     if (!city) {\n    //         alert('Please enter a city');\n    //         return;\n    //     }\n\n    //     this.setState({city: city});\n\n    //     await fetch(`https://opentable.herokuapp.com/api/restaurants?city=${city}`)\n    //     .then(res => res.json())\n    //     .then(\n    //         (result) => {\n    //             this.setState({ restaurants: result.restaurants });\n\n    //             if(this.state.fitler) {\n    //                 this.onFilterFormSubmit(this.state.fitler);\n    //             }\n    //         }\n    //     )\n    // }\n\n    onFilterFormSubmit = filter => {\n        this.setState({ fitler: filter});\n\n        if(!filter) {\n            this.onFormSubmit(this.state.city)\n        }\n\n        let filterString = filter.toLowerCase();\n\n        const restaurantsFilterList = this.props.restaurants.filter( restaurant => {\n            return restaurant.name.toLowerCase().includes(filterString) \n            || restaurant.address.toLowerCase().includes(filterString)\n            || restaurant.area.toLowerCase().includes(filterString)\n        })\n\n        this.setState({\n            restaurants: restaurantsFilterList\n        })\n    }\n\n    render() {\n        const restaurantsList = [];\n        this.props.restaurants.forEach(restaurant => {\n            restaurantsList.push(\n                <RestaurantItem key={restaurant.id} restaurant={restaurant}/>\n            )\n        })\n\n        return (\n            <div className=\"restaurant-container\">\n                <div className=\"header\">\n                    <SearchBar />\n                    <FilterBar \n                        onFilterFormSubmit={this.onFilterFormSubmit} />\n                    <span className=\"total\">Total {this.props.restaurants.length} are restaurants available.</span>\n                </div>\n                <ul className=\"list-container\">{restaurantsList}</ul>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        restaurants: state.restaurants || []\n    };\n}\n\n// function mapDispatchToProps(dispatch) {\n//     return bindActionCreators({ searchRestaurants: searchRestaurants }, dispatch);\n// }\n\nexport default connect(mapStateToProps)(RestaurantContainer);\n"]},"metadata":{},"sourceType":"module"}