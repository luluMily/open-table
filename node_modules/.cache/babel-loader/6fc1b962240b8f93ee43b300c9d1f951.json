{"ast":null,"code":"var _jsxFileName = \"/Users/luluMily/project/open-table/src/components/SearchBar.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { searchRestaurants } from '../actions/index';\nimport { bindActionCreators } from 'redux';\n\nclass SearchBar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      city: ''\n    };\n\n    this.onCityInputChange = e => {\n      this.setState({\n        city: e.target.value\n      });\n    };\n\n    this.onFormSubmit = e => {\n      e.preventDefault();\n      this.props.searchRestaurants(this.state.city);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"city-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"city\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"City: \"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"city\",\n      id: \"city-input\",\n      placeholder: \"Enter a city\",\n      onChange: this.onCityInputChange,\n      value: this.state.city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  // whatever is retured will show up as props inside of BookList\n  return {\n    restaurants: state.restaurants\n  };\n} // anything returned from this function will end up as props\n// on the BookList container\n\n\nfunction mapDispatchToProps(dispatch) {\n  // whenever selectBook is called, the result should be passed\n  // to all of our reducers\n  return bindActionCreators({\n    searchRestaurants: searchRestaurants\n  }, dispatch);\n} // promote BookList from a component to a container - it needs to know\n// about this new dispatch methos, selectBook. Make it available\n// as a prop\n\n\nexport default connect(mapStateToProps, {\n  searchRestaurants\n})(SearchBar); // export default connect(mapStateToProps, mapDispatchToProps)(SearchBar);","map":{"version":3,"sources":["/Users/luluMily/project/open-table/src/components/SearchBar.js"],"names":["React","connect","searchRestaurants","bindActionCreators","SearchBar","Component","state","city","onCityInputChange","e","setState","target","value","onFormSubmit","preventDefault","props","render","mapStateToProps","restaurants","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,kBAAT,QAAmC,OAAnC;;AAEA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5B;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAD4B;;AAAA,SAGpCC,iBAHoC,GAGhBC,CAAC,IAAI;AACrB,WAAKC,QAAL,CAAc;AACVH,QAAAA,IAAI,EAAEE,CAAC,CAACE,MAAF,CAASC;AADL,OAAd;AAIH,KARmC;;AAAA,SAUpCC,YAVoC,GAUrBJ,CAAC,IAAI;AAChBA,MAAAA,CAAC,CAACK,cAAF;AAEA,WAAKC,KAAL,CAAWb,iBAAX,CAA6B,KAAKI,KAAL,CAAWC,IAAxC;AACH,KAdmC;AAAA;;AAgBpCS,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,QAAQ,EAAE,KAAKH,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,EAAE,EAAC,YAHP;AAII,MAAA,WAAW,EAAC,cAJhB;AAKI,MAAA,QAAQ,EAAE,KAAKL,iBALnB;AAMI,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,IANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CADJ;AAeH;;AAhCmC;;AAmCxC,SAASU,eAAT,CAAyBX,KAAzB,EAAgC;AAC5B;AACA,SAAO;AACHY,IAAAA,WAAW,EAAEZ,KAAK,CAACY;AADhB,GAAP;AAGH,C,CAED;AACA;;;AACA,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC;AACA;AACA,SAAOjB,kBAAkB,CAAC;AAAED,IAAAA,iBAAiB,EAAEA;AAArB,GAAD,EAA2CkB,QAA3C,CAAzB;AACH,C,CAED;AACA;AACA;;;AACA,eAAenB,OAAO,CAACgB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAAgDE,SAAhD,CAAf,C,CACA","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { searchRestaurants } from '../actions/index';\nimport { bindActionCreators } from 'redux';\n\nclass SearchBar extends React.Component {\n    state = { city: '' };\n\n    onCityInputChange = e => {\n        this.setState({\n            city: e.target.value\n        })\n\n    };\n\n    onFormSubmit = e => {\n        e.preventDefault();\n\n        this.props.searchRestaurants(this.state.city);\n    };\n\n    render() {\n        return(\n            <div className='city-input'>\n                <form onSubmit={this.onFormSubmit}>\n                    <label htmlFor=\"city\">City: </label>\n                    <input \n                        type=\"text\"\n                        name=\"city\"\n                        id=\"city-input\"\n                        placeholder=\"Enter a city\"\n                        onChange={this.onCityInputChange}\n                        value={this.state.city} \n                    />\n                </form>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    // whatever is retured will show up as props inside of BookList\n    return {\n        restaurants: state.restaurants\n    };\n}\n\n// anything returned from this function will end up as props\n// on the BookList container\nfunction mapDispatchToProps(dispatch) {\n    // whenever selectBook is called, the result should be passed\n    // to all of our reducers\n    return bindActionCreators({ searchRestaurants: searchRestaurants }, dispatch);\n}\n\n// promote BookList from a component to a container - it needs to know\n// about this new dispatch methos, selectBook. Make it available\n// as a prop\nexport default connect(mapStateToProps, { searchRestaurants })(SearchBar);\n// export default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\n"]},"metadata":{},"sourceType":"module"}